{"version":3,"sources":["movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"+RA8BeA,MAzBf,YAAuD,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OAC1C,OAAO,sBAAKC,UAAU,QAAf,UACH,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,cAAf,UACI,oBAAIA,UAAU,eAAd,SAA8BJ,IAC9B,oBAAII,UAAU,cAAd,SAA6BL,IAC7B,oBAAIK,UAAU,gBAAd,SACKD,EAAOI,KAAI,SAACJ,EAAQK,GAAT,OACR,oBAAgBJ,UAAU,gBAA1B,SAA2CD,GAAlCK,QAGjB,oBAAGJ,UAAU,iBAAb,UAA+BH,EAAQQ,MAAM,EAAG,KAAhD,gBCwCGC,G,kNA9CbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAEVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IAAI,4DALV,gBAGCJ,EAHD,EAERK,KACEA,KAAOL,OAIX,EAAKM,SAAS,CAACN,SAAQD,WAAW,IAPxB,2C,uDASZ,WACIQ,KAAKN,c,oBAET,WACE,MAA8BM,KAAKT,MAA3BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OACnB,OACE,yBAAST,UAAU,YAAnB,SACGQ,EAEG,qBAAKR,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAGJ,qBAAKA,UAAU,SAAf,SACGS,EAAON,KAAI,SAAAc,GAAK,OACb,cAAC,EAAD,CAEEC,GAAID,EAAMC,GACVvB,KAAMsB,EAAMtB,KACZC,MAAOqB,EAAMrB,MACbC,QAASoB,EAAMpB,QACfC,OAAQmB,EAAME,mBACdpB,OAAQkB,EAAMlB,QANTkB,EAAMC,e,GA9BXE,IAAMC,YCJxBC,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.b94d3e38.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\n\r\nfunction Movie({year, title, summary, poster, genres}){  //얘는 왜 함수냐, state를 안가지기 때문에 finction component\r\n    return <div className=\"movie\">\r\n        <img src={poster} alt={title} title={title} />\r\n        <div className=\"movie__data\">\r\n            <h3 className=\"movie__title\">{title}</h3>\r\n            <h5 className=\"movie__year\">{year}</h5>\r\n            <ul className=\"movie__genres\">\r\n                {genres.map((genres, index) => (\r\n                    <li key={index} className=\"genres__genre\">{genres}</li> \r\n                ))}\r\n            </ul>\r\n            <p className=\"movie__summary\">{summary.slice(0, 140)}...</p>\r\n        </div>\r\n    </div>;\r\n}\r\n\r\nMovie.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n}\r\n\r\nexport default Movie;","import React from \"react\";\n// import PropTypes from \"prop-types\"; //속성값이 맞는지 확인하는 거, 노드로 npm i prop-types라고 쳐서 다운 받아야함\n//노드로 다운 했는데 계속 오류뜸, 뭔가 이상함\nimport axios from \"axios\";\nimport Movie from \"./movie\";\nimport \"./App.css\";\n\n\n\nclass App extends React.Component{\n  state = {\n    isLoading: true,\n    movies: []\n  };\n  getMovies = async () => {  //async = 자바스크립트에게 이 함수는 비동기라고 선언하는 것임\n    const {\n      data: { \n        data: {movies}\n      }\n    } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n    //await 스크립트가 뭘 기다릴까 라는 질문에 await 뒤에 axios가 다 될때 까지 기다리라는 의미\n    this.setState({movies, isLoading: false})    //movies(state안의 movies):movies(가져온 API안의 movies)\n  }\n  componentDidMount(){\n      this.getMovies();\n  }\n  render() {\n    const { isLoading, movies } = this.state;  //스크립트처럼 변수에 대입\n    return (\n      <section className=\"container\">\n        {isLoading \n          ? (\n            <div className=\"loader\">\n              <span className=\"loader__text\">Loading...</span>\n            </div>\n          ) : (\n          <div className=\"movies\">\n            {movies.map(movie => (\n                <Movie \n                  key={movie.id} // 경고창에 유일한 키를 가져야 한다고 나와서, 키를 입력한다. 우리는 json파일에서 아이디를 알수 있으니 아이디를 넣는다 \n                  id={movie.id} \n                  year={movie.year} \n                  title={movie.title} \n                  summary={movie.summary} \n                  poster={movie.medium_cover_image}\n                  genres={movie.genres}\n                />\n              ))}\n          </div>\n          )}\n      </section>\n    );\n  }\n}\n\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// class App extends React.Component{ App 이름은 밑에 export default App에서 App이랑 똑같이 \n  // state = {\n  //   count: 0\n  // };  state는 object이고 component안에 data을 넣을 공간, 이 data는 계속 변한다\n  // plus = () => {\n  //   this.setState(current => ({count: current.count + 1}));  //minus함수안에 적은것 보다 이게 더 깔끔\n  // };\n  // minus = () => {\n  //   this.setState({count: this.state.count - 1});\n  // };\n  // render(){\n  //   return (\n  //     <div>\n  //       <h2>The number is: {this.state.count}</h2> \n  //       <button onClick={this.plus}>plus</button>\n  //       <button onClick={this.minus}>minus</button>\n  //     </div>\n  //     );\n  // }\n\n  //클래스 리액트는 return을 가지지 않는다. \n  //함수가 아니라 클래스라서.\n  //그래서 Calss는 render 메소드를 가지고있다\n\n  //componentDidMount(){}  컴포넌트가 랜더링 한 후 실행\n  //componentDidUpdate(){} 컴포넌트가 업데이트(지금은 애드나 마이너스 버튼 클릭시)되면 실행\n  //componentWillUnmount(){} 컴포넌트가 삭제되면(예를 들어 다른 페이지로 넘어갈때) 실행\n// }\n\n\n\n\n\n\n\n\n\n\n//음식 예제 \n// function Food({name, where, rating}){\n//   return <div>\n//     <h2>I like {name}</h2>\n//     <h4>{rating} / 5</h4>\n//     <h2>That's from {where}</h2>\n//   </div>\n// }\n\n// Food.propTypes = {  //확인하고 싶은 prop이 있는 오브젝트.propTypes <=얘는 무조건 propsTypes라고 적어야함\n//   name: PropTypes.string.isRequired,\n//   where: PropTypes.string.isRequired,\n//   rating: PropTypes.number\n//   //이런식으로 적어서 해당 porp가 맞는지 확인한다. 콘솔창에 오류 뜨면 prop이 잘못된거 \n// };\n\n// const foodILik = [\n//   {\n//     name: \"kimchi\", from: \"korea\", rating: 5\n//   },\n//   {\n//     name: \"ramen\", from: \"japan\", rating: 4.9\n//   },\n//   {\n//     name: \"samgyeobsal\", from: \"america\", rating: 4.8\n//   },\n//   {\n//     name: \"chukumi\", from: \"korea\", rating: 4.7\n//   }\n// ];\n\n// function App() {\n//   return (\n//     <div> \n//       {foodILik.map(dish => (\n//       <Food \n//         key={dish.id} \n//         name={dish.name} \n//         where={dish.from} \n//         rating={dish.rating} \n//       />\n//       ))}\n//     </div>\n//     );\n// }\n\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n\nReactDOM.render(<App />,document.getElementById(\"root\"));\n"],"sourceRoot":""}